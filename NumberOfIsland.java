import java.util.LinkedList;
import java.util.Queue;

public class NumberOfIsland {

    public int numIslands(char[][] ip) {
        class Pos{
            public int x,y;
            Pos(int i, int j){
                x = i;
                y = j;
            }
        };

        int row = ip.length;
        if(row == 0)
            return 0;

        int col = ip[0].length;
        int count =0;
        int [][] isVisited = new int[row][col];
        Queue<Pos> q = new LinkedList<Pos>();

        for(int i = 0; i <row; i++ )
        {
            for(int j=0; j < col; j++)
            {
                if(ip[i][j] == '1' && isVisited[i][j] == 0)
                {
                    q.add(new Pos(i,j));
                    count++;


                    System.out.println( "( " + i + "," + j + ")");
                    while(!q.isEmpty())
                    {
                        Pos tPos = q.peek();
                        q.remove();
                        System.out.println( "( " + tPos.x + "," + tPos.y + ")");
                        if(isVisited[tPos.x][tPos.y] == 1)
                            continue;
                        
                        isVisited[tPos.x][tPos.y] = 1;
                        if (isValid(tPos.x + 1, tPos.y, row, col) && ip[tPos.x + 1][tPos.y] == '1' && isVisited[tPos.x + 1][tPos.y] == 0) {
                            q.add(new Pos(tPos.x + 1, tPos.y));
                        }

                        if (isValid(tPos.x - 1, tPos.y, row, col) && ip[tPos.x - 1][tPos.y] == '1' && isVisited[tPos.x - 1][tPos.y] == 0) {
                            q.add(new Pos(tPos.x - 1, tPos.y));
                        }

                        if (isValid(tPos.x , tPos.y+1, row, col) && ip[tPos.x ][tPos.y+1] == '1' && isVisited[tPos.x ][tPos.y + 1] == 0) {
                            q.add(new Pos(tPos.x , tPos.y+1));
                        }

                        if (isValid(tPos.x , tPos.y - 1, row, col) && ip[tPos.x ][tPos.y - 1] == '1' && isVisited[tPos.x ][tPos.y - 1] == 0)                           {
                            q.add(new Pos(tPos.x, tPos.y - 1));
                        }
                    }
                }
            }
        }
        return count;
    }
    private boolean isValid(int i, int j, int row, int col) {
        return i >= 0 && i < row && j >=0 && j < col;
    }

    public static  void main(String [] args)
    {
        NumberOfIsland obj = new NumberOfIsland();
        char[][] ip = {{'1','1','1','1','1','0','1','1','1','1','1','1','1','1','1','0','1','0','1','1'},{'0','1','1','1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','1','0'},{'1','0','1','1','1','0','0','1','1','0','1','1','1','1','1','1','1','1','1','1'},{'1','1','1','1','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},{'1','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},{'1','0','1','1','1','1','1','1','0','1','1','1','0','1','1','1','0','1','1','1'},{'0','1','1','1','1','1','1','1','1','1','1','1','0','1','1','0','1','1','1','1'},{'1','1','1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','0','1','1'},{'1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','1','1','1','1','1'},{'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},{'0','1','1','1','1','1','1','1','0','1','1','1','1','1','1','1','1','1','1','1'},{'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},{'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},{'1','1','1','1','1','0','1','1','1','1','1','1','1','0','1','1','1','1','1','1'},{'1','0','1','1','1','1','1','0','1','1','1','0','1','1','1','1','0','1','1','1'},{'1','1','1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','1','1','0'},{'1','1','1','1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','0','0'},{'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},{'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},{'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'}};

        int count = obj.numIslands(ip);
        System.out.println(count);
    }
}
